#!/usr/bin/env zsh

has() {
    type "$1" >/dev/null 2>&1; return $?
}

is_osx() {
    [[ $OSTYPE == *darwin* ]]
}

is_screen_running() {
    [[ -n "$STY" ]]
}

is_tmux_running() {
    [[ -n "$TMUX" ]]
}

is_ssh_running() {
    [[ -n "$SSH_CONNECTION" ]]
}

shell_has_started_interactively() {
    [[ -n "$PS1" ]]
}

tmuxx() {
    is_ssh_running && {
        export DISPLAY="$SSH_CONNECTION"
        return 0
    }

    is_tmux_running && {
        export DISPLAY="$TMUX"
        return 0
    }

    is_screen_running && {
        export DISPLAY="$STY"
        return 0
    }

    shell_has_started_interactively || {
        echo 'please exec `source tmuxx`'
        return 0
    }

    has 'tmux' || {
        return 1
    }

    if tmux has-session >/dev/null 2>&1 && tmux list-sessions | grep -qvE '\(attached\)$'; then
        # detached session exists
        tmux list-sessions
        echo -n "Tmux: attach? (y/N/num) "
        read
        if [[ "$REPLY" =~ ^[Yy]$ ]]; then
            tmux attach-session
            if [ $? -eq 0 ]; then
                echo "$(tmux -V) attached session"
                return 0
            fi
        elif [[ "$REPLY" =~ ^[0-9]+$ ]]; then
            tmux attach -t "$REPLY"
            if [ $? -eq 0 ]; then
                echo "$(tmux -V) attached session"
                return 0
            fi
        fi
    fi

    if is_osx && has 'reattach-to-user-namespace'; then
        # on OS X force tmux's default command
        # to spawn a shell in the user's namespace
        tmux_config=$(cat $HOME/.tmux.conf <(echo 'set-option -g default-command "reattach-to-user-namespace -l $SHELL"'))
        tmux -f <(echo "$tmux_config") new-session && echo "$(tmux -V) created new session supported OS X"
    else
        tmux new-session && echo "tmux created new session"
    fi

    return 0
}

tmuxx
