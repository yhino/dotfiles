[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
if = "has('nvim')"
on_event = 'VimEnter'
hook_source = '''
nnoremap <C-u><C-f> <cmd>Telescope find_files<cr>
nnoremap <C-u><C-g> <cmd>Telescope live_grep<cr>
nnoremap <C-u><C-b> <cmd>Telescope buffers<cr>

lua << EOF
local actions = require('telescope.actions')

require('telescope').setup{
    defaults = {
        mappings = {
            i = {
                ["<C-j>"] = actions.select_horizontal,
            },
            n = {
                ["<C-c>"] = actions.close,
            },
        }
    }
}
EOF
'''

[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'
on_source = 'telescope.nvim'

[[plugins]]
repo = 'Shougo/neomru.vim'
if = "!has('nvim')"
on_if = 1

[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'
if = "!has('nvim')"
on_event = "VimEnter"
hook_source = '''
    " 入力モードで開始する
    let g:unite_enable_start_insert=1

    " インサート／ノーマルどちらからでも呼び出せるようにキーマップ
    nnoremap <silent> <C-u><C-u>
        \ :<C-u>Unite -buffer-name=files buffer file_mru file file/new<CR>
    inoremap <silent> <C-u><C-u>
        \ <ESC>:<C-u>Unite -buffer-name=files buffer file_mru file file/new<CR>
    nnoremap <silent> <C-u><C-f>
        \ :<C-u>UniteWithBufferDir -buffer-name=files buffer file file_mru file/new<CR>
    inoremap <silent> <C-u><C-f>
        \ <ESC>:<C-u>UniteWithBufferDir -buffer-name=files buffer file file_mru file/new<CR>

    " unite.vim上でのキーマッピング
    autocmd MyAutoCmd FileType unite call s:unite_my_settings()
    function! s:unite_my_settings()
      " 横分割で開く
      nmap <silent> <buffer> <expr> <C-j> unite#do_action('split')
      imap <silent> <buffer> <expr> <C-j> unite#do_action('split')

      " 縦分割で開く
      nmap <silent> <buffer> <expr> <C-l> unite#do_action('vsplit')
      imap <silent> <buffer> <expr> <C-l> unite#do_action('vsplit')

      " 単語単位からパス単位で削除するように変更
      imap <buffer> <C-w> <Plug>(unite_delete_backward_path)

      " ESCキーを2回押すと終了する
      nmap <silent><buffer> <ESC><ESC> q
      imap <silent><buffer> <ESC><ESC> <ESC>q
    endfunction
'''

[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = 'unite.vim'
if = "!has('nvim')"
on_map = [['n', '<Plug>']]
on_if = "isdirectory(bufname('%'))"
on_source = 'unite.vim'
hook_source = '''
    " vimデフォルトのエクスプローラをvimfilerで置き換える
    let g:vimfiler_as_default_explorer = 1

    nnoremap <leader>e :<C-u>VimFilerBufferDir -split -simple -winwidth=35 -no-quit<CR>
'''

[[plugins]]
repo = 'Shougo/vimshell.vim'
if = "!has('nvim')"

[[plugins]]
repo = 'Shougo/unite-outline'
if = "!has('nvim')"
on_source = 'unite.vim'
hook_source = '''
    " unite-outline用の設定
    nnoremap <silent> <C-u><C-o>
        \ :<C-u>Unite outline -no-start-insert -resume<CR>
    inoremap <silent> <C-u><C-o>
        \ <ESC>:<C-u>Unite outline -no-start-insert -resume<CR>
'''
